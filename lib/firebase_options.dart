// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions extends FirebaseOptions {
  const DefaultFirebaseOptions._({
    required this.apiKey,
    required this.appId,
    required this.messagingSenderId,
    required this.projectId,
    required this.authDomain,
    required this.storageBucket,
  }) : super(
         apiKey: apiKey,
         appId: appId,
         messagingSenderId: messagingSenderId,
         projectId: projectId,
         authDomain: authDomain,
         storageBucket: storageBucket,
       );

  factory DefaultFirebaseOptions.getCurrentPlatform() {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const DefaultFirebaseOptions web = DefaultFirebaseOptions._(
    apiKey: 'AIzaSyBwjkV54a69ZogFWh_V7oB1HL9X6egsTuU',
    appId: '1:86917810457:web:5d553a27320cf81f991d88',
    messagingSenderId: '86917810457',
    projectId: 'motodoc-backend',
    authDomain: 'motodoc-backend.firebaseapp.com',
    storageBucket: 'motodoc-backend.firebasestorage.app',
  );

  static const DefaultFirebaseOptions android = DefaultFirebaseOptions._(
    apiKey: 'your-android-api-key',
    appId: 'your-android-app-id',
    messagingSenderId: 'your-sender-id',
    projectId: 'motodocs-ai-1759166719',
    authDomain: 'motodocs-ai-1759166719.firebaseapp.com',
    storageBucket: 'motodocs-ai-1759166719.appspot.com',
  );

  static const DefaultFirebaseOptions ios = DefaultFirebaseOptions._(
    apiKey: 'your-ios-api-key',
    appId: 'your-ios-app-id',
    messagingSenderId: 'your-sender-id',
    projectId: 'motodocs-ai-1759166719',
    authDomain: 'motodocs-ai-1759166719.firebaseapp.com',
    storageBucket: 'motodocs-ai-1759166719.appspot.com',
  );

  static const DefaultFirebaseOptions macos = DefaultFirebaseOptions._(
    apiKey: 'your-macos-api-key',
    appId: 'your-macos-app-id',
    messagingSenderId: 'your-sender-id',
    projectId: 'motodocs-ai-1759166719',
    authDomain: 'motodocs-ai-1759166719.firebaseapp.com',
    storageBucket: 'motodocs-ai-1759166719.appspot.com',
  );

  static const DefaultFirebaseOptions windows = DefaultFirebaseOptions._(
    apiKey: 'your-windows-api-key',
    appId: 'your-windows-app-id',
    messagingSenderId: 'your-sender-id',
    projectId: 'motodocs-ai-1759166719',
    authDomain: 'motodocs-ai-1759166719.firebaseapp.com',
    storageBucket: 'motodocs-ai-1759166719.appspot.com',
  );

  final String apiKey;
  final String appId;
  final String messagingSenderId;
  final String projectId;
  final String authDomain;
  final String storageBucket;
}
